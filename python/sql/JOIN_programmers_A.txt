<SQL 답안>
* JOIN
7/11
1. 조건에 맞는 도서와 저자 리스트 출력하기
SELECT 
BOOK.BOOK_ID , 
AUTHOR.AUTHOR_NAME , 
DATE_FORMAT(BOOK.PUBLISHED_DATE , '%Y-%m-%d') AS PUBLISHED_DATE
FROM BOOK

INNER JOIN AUTHOR USING(AUTHOR_ID)
WHERE BOOK.CATEGORY = '경제'

ORDER BY PUBLISHED_DATE;





2. 상품 별 오프라인 매출 구하기
SELECT P.PRODUCT_CODE , SUM(P.PRICE * O.SALES_AMOUNT) AS SALES
FROM PRODUCT P

INNER JOIN OFFLINE_SALE O USING(PRODUCT_ID)
GROUP BY PRODUCT_CODE

ORDER BY SALES DESC , PRODUCT_CODE;





3. 없어진 기록 찾기
SELECT OUTS.ANIMAL_ID , OUTS.NAME
FROM ANIMAL_OUTS OUTS

LEFT JOIN ANIMAL_INS USING(ANIMAL_ID)
WHERE (OUTS.ANIMAL_ID , OUTS.NAME) NOT IN(SELECT ANIMAL_ID , NAME FROM ANIMAL_INS)

ORDER BY ANIMAL_ID



3-1. NULL을 활용한 다른 풀이
SELECT OUTS.ANIMAL_ID , OUTS.NAME
FROM ANIMAL_OUTS OUTS

LEFT JOIN ANIMAL_INS USING(ANIMAL_ID)
WHERE OUTS.DATETIME IS NULL 

ORDER BY ANIMAL_ID





4. 있었는데요 없었습니다
SELECT I.ANIMAL_ID , I.NAME
FROM ANIMAL_INS I

INNER JOIN ANIMAL_OUTS O
USING(ANIMAL_ID)
WHERE I.DATETIME > O.DATETIME

ORDER BY I.DATETIME;





5. 오랜 기간 보호한 동물(1)
SELECT I.NAME , I.DATETIME
FROM ANIMAL_INS I

LEFT OUTER JOIN ANIMAL_OUTS O
USING(ANIMAL_ID)
WHERE O.DATETIME IS NULL

ORDER BY I.DATETIME
LIMIT 3;





6. 그룹별 조건에 맞는 식당 목록 출력하기
SELECT 
M.MEMBER_NAME , 
R.REVIEW_TEXT , 
DATE_FORMAT(R.REVIEW_DATE , '%Y-%m-%d') AS REVIEW_DATE
FROM MEMBER_PROFILE M

INNER JOIN REST_REVIEW R
USING(MEMBER_ID)
WHERE R.MEMBER_ID = (
SELECT MEMBER_ID FROM REST_REVIEW
GROUP BY MEMBER_ID
ORDER BY COUNT(*) DESC
LIMIT 1)

ORDER BY REVIEW_DATE , REVIEW_TEXT;





7. 주문량이 많은 아이스크림들 조회하기
- UNION 활용
SELECT FLAVOR
FROM(
SELECT FLAVOR , TOTAL_ORDER
FROM FIRST_HALF

UNION
SELECT FLAVOR , TOTAL_ORDER
FROM JULY
) AS T
GROUP BY FLAVOR

ORDER BY SUM(TOTAL_ORDER) DESC
LIMIT 3



- JOIN 활용
SELECT F. FLAVOR
FROM FIRST_HALF F

INNER JOIN JULY J
USING(FLAVOR)
GROUP BY FLAVOR

ORDER BY SUM(F.TOTAL_ORDER + J.TOTAL_ORDER) DESC
LIMIT 3;