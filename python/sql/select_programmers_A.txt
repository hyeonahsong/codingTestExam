<SQL 답안>
* select
1. 강원도에 위치한 생산공장 목록 출력하기

SELECT FACTORY_ID, FACTORY_NAME, ADDRESS
FROM FOOD_FACTORY
WHERE Address LIKE '강원도%'
Order by FACTORY_ID;





2. 모든 레코드 조회하기
SELECT * FROM ANIMAL_INS  
Order by ANIMAL_ID;





3. 흉부외과 또는 일반외과 의사 목록 출력하기
SELECT  DR_NAME ,  DR_ID ,  MCDP_CD , DATE_FORMAT (HIRE_YMD ,  '%Y-%m-%d')  AS  HIRE_YMD
FROM DOCTOR
WHERE MCDP_CD IN ('CS' , 'GS')
ORDER BY HIRE_YMD DESC , DR_NAME;






4. 역순 정렬하기


SELECT NAME , DATETIME 
FROM ANIMAL_INS
Order by ANIMAL_ID DESC;





5. 아픈 동물 찾기
SELECT ANIMAL_ID , NAME 
FROM ANIMAL_INS  
WHERE INTAKE_CONDITION = 'Sick'
Order by ANIMAL_ID;





6. 어린 동물 찾기
SELECT ANIMAL_ID , NAME
FROM ANIMAL_INS
WHERE INTAKE_CONDITION <> 'Aged'
Order by ANIMAL_ID;





7. 동물의 아이디와 이름
SELECT ANIMAL_ID , NAME
FROM ANIMAL_INS  
Order by ANIMAL_ID ;





8. 여러 기준으로 정렬하기
SELECT ANIMAL_ID , NAME , DATETIME 
FROM ANIMAL_INS  
Order by NAME , DATETIME  DESC;





9. 상위 	n개 레코드
SELECT NAME
FROM ANIMAL_INS  
Order by DATETIME
LIMIT 1;





10. 조건에 맞는 회원수 구하기
- 첫 번째 시도 답안
SELECT COUNT(20 <= AGE and AGE <= 29)
FROM USER_INFO  
WHERE JOINED  LIKE '2021%';

 
- 다른 사람 답안
SELECT COUNT(USER_ID )
FROM USER_INFO  
WHERE year(JOINED) =2021 and 20 <= AGE and AGE < 30;


- 내 최종 답안
SELECT COUNT(USER_ID )
FROM USER_INFO  
WHERE JOINED LIKE '2021%' and 20 <= AGE and AGE < 30;





11. 조건에 맞는 도서 리스트 출력하기
SELECT BOOK_ID , DATE_FORMAT(PUBLISHED_DATE , '%Y-%m-%d') AS PUBLISHED_DATE 
FROM BOOK
WHERE YEAR(PUBLISHED_DATE)  = 2021 and CATEGORY = '인문'
Order by PUBLISHED_DATE ;





12. 서울에 위치한 식당 목록 출력하기
의사코드
1) SELECT
REST_INFO
: 식당 이름, 음식 종류, 즐겨찾기수, 주소
REST_REVIEW  
: 식당 ID, 리뷰 평균(둘 째자리까지)

2) JOIN
REST_ID로 연결.
REST_REVIEW   table에 REST_INFO table JOIN.

3)LIKE
'서울특별시'가 포함된 주소만 남겨두기

4) GROUP BY
REST_ID 기준.

5) Order by
평균 DESC
즐겨찾기 DESC


SELECT T2.REST_ID , T1.REST_NAME , T1.FOOD_TYPE , T1.FAVORITES , T1.ADDRESS , ROUND(AVG(T2.REVIEW_SCORE ), 2) AS SCORE
FROM REST_REVIEW   T2
INNER JOIN REST_INFO  T1
ON T1.REST_ID = T2.REST_ID
WHERE ADDRESS LIKE '서울%'
GROUP BY T2.REST_ID
Order by SCORE DESC , T1.FAVORITES DESC;





13. 과일로 만든 아이스크림 고르기
SELECT T1.FLAVOR 
FROM FIRST_HALF   T1
INNER JOIN ICECREAM_INFO  T2
ON T1.FLAVOR  = T2.FLAVOR 
WHERE TOTAL_ORDER  > 3000 and INGREDIENT_TYPE  = 'fruit_based'
Order by TOTAL_ORDER DESC;